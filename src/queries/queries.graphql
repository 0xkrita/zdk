fragment TokenContractInfo on TokenContract {
  name
  network
  description
  collectionAddress
  symbol
  chain
}

fragment FullMedia on TokenContentMedia {
  size
  url
  size
  mimeType
  mimeType
  mediaEncoding {
    large
    poster
    preview
    thumbnail
  }
}

fragment PriceSummary on PriceAtTime {
  blockNumber
  ethPrice {
    decimal
  }
  nativePrice {
    decimal
    currency {
      address
      decimals
      name
    }
  }
  usdcPrice {
    decimal
  }
}

fragment MintDetails on MintInfo {
  price {
    ...PriceSummary
  }
  originatorAddress
  toAddress
  mintContext {
    ...TransactionDetails
  }
}

fragment TransactionDetails on TransactionInfo {
  blockNumber
  blockTimestamp
  transactionHash
  logIndex
}

fragment SaleInfo on Sale {
  saleContractAddress
  transactionInfo {
    ...TransactionDetails
  }
  buyerAddress
  collectionAddress
  # saleType{ SaleEventType!}
  price {
    ...PriceSummary
  }
  sellerAddress
  tokenId
}

fragment SaleDetails on SaleConnection {
  totalCount
  nodes {
    ...SaleInfo
  }
}

fragment MarketPropertiesFull on MarketProperties {
  ... on V2Auction {
    __typename
    firstBidTime
    highestBidder
    curator
    collectionAddress
    curatorFeePercentage
    duration
    estimatedExpirationTime
    auctionStatus: status
    tokenOwner
    address
    auctionId
    approved
    reservePrice {
      ...PriceSummary
    }
  }
  ... on V3Ask {
    __typename
    buyer
    finder
    findersFeeBps
    sellerFundsRecipient
    askStatus: status
    seller
    askPrice {
      ...PriceSummary
    }
  }
}

fragment MarketInfo on Market {
  collectionAddress
  marketAddress
  marketType
  price {
    ...PriceSummary
  }
  status
  networkInfo {
    chain
    network
  }
}

fragment MarketDetails on Market {
  properties {
    ...MarketPropertiesFull
  }
}

fragment TokenInfo on Token {
  tokenId
  tokenContract {
    ...TokenContractInfo
  }
  mintInfo {
    ...MintDetails
  }
  collectionAddress
  lastRefreshTime
  owner
  name
  description
  image {
    ...FullMedia
  }
  content {
    ...FullMedia
  }
}

fragment TokenDetails on Token {
  metadata

  tokenUrl
  tokenUrlMimeType

  attributes {
    traitType
    value
    displayType
  }
}

fragment CollectionInfo on Collection {
  address
  description
  name
  symbol
  totalSupply
}

fragment CollectionDetails on Collection {
  attributes {
    traitType
    valueMetrics {
      count
      percent
      value
    }
  }
}

fragment PageInfoDefault on PageInfo {
  limit
  offset
}

query collections(
  $network: NetworkInput!
  $query: CollectionsQueryInput!
  $pagination: PaginationInput!
  $sort: CollectionSortKeySortInput!
  $includeFullDetails: Boolean!
) {
  collections(query: $query, network: $network, pagination: $pagination, sort: $sort) {
    totalCount
    pageInfo {
      limit
      offset
    }
    nodes {
      ...CollectionInfo
      ...CollectionDetails @include(if: $includeFullDetails)
    }
  }
}

query tokens(
  $network: NetworkInput!
  $query: TokensQueryInput
  $filter: TokensQueryFilter
  $pagination: PaginationInput!
  $sort: TokenSortKeySortInput!
  $includeFullDetails: Boolean!
) {
  tokens(
    query: $query
    network: $network
    pagination: $pagination
    sort: $sort
    filter: $filter
  ) {
    totalCount
    pageInfo {
      limit
      offset
    }
    nodes {
      ...TokenInfo
      ...TokenDetails @include(if: $includeFullDetails)
    }
  }
}

query tokenMarkets(
  $network: NetworkInput!
  $query: TokenMarketsQueryInput!
  $pagination: PaginationInput!
  $filter: TokenMarketsFilterInput
  $sort: TokenMarketSortKeySortInput!
  $includeFullDetails: Boolean!
  $includeSalesHistory: Boolean!
) {
  # this returns all associated markets
  tokenMarkets(
    query: $query
    network: $network
    filter: $filter
    pagination: $pagination
    sort: $sort
  ) {
    nodes {
      markets {
        ...MarketInfo
        ...MarketDetails @include(if: $includeFullDetails)
      }
      token {
        ...TokenInfo
        ...TokenDetails @include(if: $includeFullDetails)
      }
      sales(
        pagination: { limit: 10, offset: 0 }
        sort: { sortKey: TIME, sortDirection: DESC }
      ) {
        ...SaleDetails @include(if: $includeSalesHistory)
      }
    }
    pageInfo {
      ...PageInfoDefault
    }
  }
}

query aggregateStats(
  $network: NetworkInput!
  $query: AggregateStatQueryInput!
  $statType: StatType!
) {
  aggregateStat(network: $network, query: $query, statType: $statType) {
    stat {
      ... on FloatValue {
        floatValue: value
        unit
      }
      ... on IntValue {
        intValue: value
        unit
      }
    }
  }
}

query aggregateAttributes(
  $network: NetworkInput!
  $query: AggregateAttributesQueryInput!
) {
  aggregateAttributes(network: $network, query: $query) {
    traitType
    valueMetrics {
      value
      count
      percent
    }
  }
}
